name: Deploy HTML to GCS

# 어떤 이벤트가 발생했을 때 이 워크플로우를 실행할지 정의합니다.
on:
  push:
    branches:
      - main  # main 브랜치에 push가 발생했을 때 실행

# 워크플로우에서 사용할 환경 변수를 정의합니다.
env:
  GCP_BUCKET_NAME: "gcalc.nonda.info"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository # 1. GitHub 저장소 체크아웃
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud # 2. Google Cloud 인증
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Install gsutil
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gsutil'

      - name: Delete existing GCS bucket contents
        # run: gsutil -m rm -r "gs://gcalc.nonda.info/*"
        run: gsutil -m rm -r -f "gs://${{ env.GCP_BUCKET_NAME }}/*"


      # - name: Set up Google Cloud CLI # 3. Google Cloud CLI 설치 (gsutil 포함)
      #   uses: 'google-github-actions/setup-gcloud@v2'

      - name: Sync HTML files to GCS # GCS에 파일 동기화
        run: |
          # .html 파일만 버킷에 업로드하고, 캐시 방지 헤더를 추가
          gsutil -m rsync -r -x '^(?!.*\.html$).*' . gs://${{ env.GCP_BUCKET_NAME }}
          
          # Cache-Control 헤더 추가 (개발 환경에 적합한 설정)
          gsutil -m setmeta -h "Cache-Control: public, max-age=0, must-revalidate" gs://${{ env.GCP_BUCKET_NAME }}/*.html

      #   shell: bash
      # - name: Sync HTML files to GCS # GCS에 파일 동기화
      #   run: |

      #     # .html 파일만 버킷에 업로드
      #     gsutil -m rsync -r -x '^(?!.*\.html$).*' . gs://${{ env.GCP_BUCKET_NAME }}
      #   shell: bash